// The plugin looks for a .jsbeautifyrc file in the same directory as the
// source file you're prettifying (or any directory above if it doesn't exist,
// or in your home folder if everything else fails) and uses those options
// along the default ones.
// Details: https://github.com/victorporof/Sublime-HTMLPrettify#using-your-own-jsbeautifyrc-options
// Documentation: https://github.com/einars/js-beautify/

// Set brace_style
//  collapse: (old default) Put braces on the same line as control statements
//  collapse-preserve-inline: (new default) Same as collapse but better support for ES6 destructuring and other features. https://github.com/victorporof/Sublime-HTMLPrettify/issues/231
//  expand: Put braces on own line (Allman / ANSI style)
//  end-expand: Put end braces on own line
//  none: Keep them where they are
// [collapse|expand|end-expand|none] Put braces on the same line as control statements (default), or put braces on own line (Allman / ANSI style), or just put end braces on own line, or attempt to keep them where they are

// end_with_newline - End output with newline
// indent_char - Indentation character
// indent_with_tabs - indent with tabs
// indent_handlebars - e.g. {{#foo}}, {{/foo}}
// indent_inner_html - Indent <head> and <body> sections
// indent_scripts - [keep|separate|normal]
// indent_size - Indentation size
// max_preserve_newlines - Maximum number of line breaks to be preserved in one chunk (0 disables)
// preserve_newlines - Whether existing line breaks before elements should be preserved (only works before elements, not inside tags or for text)
// wrap_line_length - Lines should wrap at next opportunity after this number of characters (0 disables)
// selector_separator_newline - Separate selectors with newline or not (e.g. "a,\nbr" or "a, br")
// space_around_selector_separator - Ensure space around selector separators: '>', '+', '~' (e.g. "a>b" -> "a > b")
// break_chained_methods - Break chained method calls across subsequent lines
// e4x - Pass E4X xml literals through untouched
// jslint_happy - If true, then jslint-stricter mode is enforced
// keep_array_indentation - Preserve array indentation
// keep_function_indentation - Preserve function indentation
// space_after_anon_function - Should the space before an anonymous function's parens be added, "function()" vs "function ()"
// space_before_conditional - Should the space before conditional statement be added, "if(true)" vs "if (true)"
// space_in_empty_paren - Add padding spaces within empty paren, "f()" vs "f( )"
// space_in_paren - Add padding spaces within paren, ie. f( a, b )
// unescape_strings - Should printable characters in strings encoded in \xNN notation be unescaped, "example" vs "\x65\x78\x61\x6d\x70\x6c\x65"

{
  "html": {
    "allowed_file_extensions": [ "htm", "html", "xhtml", "shtml", "xml", "svg" ],
    "brace_style": "collapse-preserve-inline",
    "end_with_newline": true,
    "indent_char": " ",
    "indent_with_tabs": false,
    "indent_handlebars": false,
    "indent_inner_html": true,
    "indent_scripts": "normal",
    "indent_size": 2,
    "max_preserve_newlines": 2,
    "preserve_newlines": true,
    "wrap_line_length": 0
  },
  "css": {
    "allowed_file_extensions": [ "css", "scss", "sass", "less" ],
    "indent_size": 2,
    "indent_char": " ",
    "indent_with_tabs": false,
    "end_with_newline": true,
    "selector_separator_newline": true,
    "space_around_selector_separator": true
  },
  "js": {
    "allowed_file_extensions": [ "js", "json", "jshintrc", "jsbeautifyrc" ],
    "brace_style": "collapse-preserve-inline",
    "break_chained_methods": false,
    "e4x": true,
    "end_with_newline": true,
    "indent_char": " ",
    "indent_level": 0,
    "indent_size": 2,
    "indent_with_tabs": false,
    "jslint_happy": true,
    "keep_array_indentation": false,
    "keep_function_indentation": false,
    "max_preserve_newlines": 2,
    "preserve_newlines": true,
    "space_after_anon_function": false,
    "space_before_conditional": true,
    "space_in_empty_paren": false,
    "space_in_paren": true,
    "unescape_strings": false,
    "wrap_line_length": 0
  },
  "sql": {
    "indent_size": 2,
    "indent_char": " ",
    "indent_level": 0,
    "indent_with_tabs": false
  },
  "markdown": {
    "allowed_file_extensions": [ "md", "markdown" ],
    "listItemIndent": "1",
    "indent_size": 2,
    "indent_char": " ",
    "indent_with_tabs": false,
    "max_preserve_newlines": 2
  }
}
